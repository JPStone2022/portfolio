name,slug,description,category_name,order,
Bash,bash,"Bash: Role: Crucial Supporting Tool. Use Cases: Command-line interface for interacting with operating systems (especially Linux/macOS), managing files, running scripts (Python, etc.), automating workflows (shell scripting), managing virtual environments, installing packages (pip, conda), interacting with servers via SSH, and using tools like Git and Docker. Essential for MLOps and working in cloud environments.",Command Line,0,"Bash, or Bourne Again SHell, is an essential skill to have for machine learning. I have used Git Bash to connect remotely to git, to initiate a blank reposotory, make pull requests, and interact with GitHub. I have written Bash scripts (.sh files) to automate sequences of commands within machine learning models."
BeautifulSoup,beautifulsoup,"BeautifulSoup: Role: Supporting Tool (Data Acquisition). Use Cases: A Python library specifically for web scraping. Used in the data acquisition phase to parse HTML and XML documents, extracting text, links, tables, and other data from websites when structured data APIs are not available.",,1,
C#,c-sharp,"C#: Role: Less Common (Niche Applications). Use Cases: Primarily used for Windows application development, game development (Unity), and enterprise software within the .NET ecosystem. While ML libraries exist for .NET (like ML.NET), Python is overwhelmingly dominant for core ML/AI/DS development. C# might be used in organizations integrating ML models into existing .NET applications.",Programming Languages,2,
CSS,css,"CSS (Cascading Style Sheets): Role: Supporting Tool (Web Development/Visualization). Use Cases: Used purely for styling web pages and web applications. Relevant if you are building web interfaces for ML models (using Django/Flask), creating interactive dashboards (with libraries like Dash or Streamlit), or custom web visualizations. Not used for core algorithm development.",Web Development,3,
Django,django,"Django: Role: Supporting Tool (Web Development/Deployment). Use Cases: A high-level Python web framework. Used to build full-featured web applications that can serve ML models via APIs, display results, provide user interfaces for interacting with AI systems, or manage data pipelines. It's more feature-rich (and sometimes more complex) than Flask for building larger applications. This portfolio project is an example!",,4,
Excel,excel,"Excel: Role: Supporting Tool (Basic Data Analysis/Exploration/Reporting). Use Cases: Widely used for basic data viewing, manipulation, simple calculations, creating charts, and sharing results with non-technical stakeholders. Useful for initial data exploration or small datasets, but quickly becomes limited for complex analysis, large data volumes, or sophisticated modeling where Pandas/Python are preferred.",,5,
Flask,flask,Flask: Role: Supporting Tool (Web Development/Deployment). Use Cases: A lightweight Python microframework for building web applications and APIs. Very commonly used in ML/DS to quickly create APIs that serve predictions from trained models. It's simpler and more flexible than Django for smaller applications or microservices focused solely on model serving.,,6,
Git,git,"Git: Role: Crucial Supporting Tool. Use Cases: The standard distributed version control system. Essential for tracking changes in code (Python scripts, notebooks, configuration files), collaborating with others, managing different versions of experiments, and deploying code reliably.",Git and Version Control:,7,
GitHub,github,"GitHub (or GitLab/Bitbucket): Role: Crucial Supporting Tool. Use Cases: Web-based hosting services for Git repositories. Used for storing code centrally, collaborating with teams (pull requests, code reviews), showcasing projects (like your portfolio!), and often integrating with CI/CD pipelines for automated testing and deployment.",,8,
Go,go,"Go (Golang): Role: Less Common (Infrastructure/Performance). Use Cases: A statically typed, compiled language known for concurrency and performance. While not typically used for core ML model development (Python dominates), Go might be used in building high-performance backend systems, infrastructure tools, or specific components within an ML pipeline where Python's performance might be a bottleneck, or for creating efficient data processing tools. Its use in the ML/DS space is growing but still niche compared to Python.",Programming Languages,9,
HTML,html,"HTML (HyperText Markup Language): Role: Supporting Tool (Web Development/Visualization/Reporting). Use Cases: The standard markup language for creating web pages and web applications. Used to structure the content of dashboards (Dash, Streamlit), web interfaces for ML models (Django, Flask), or reports generated from analysis (e.g., exporting results to an HTML file). Not used for core algorithm development.",Web Development,10,
Hugging Face Transformers,hugging-face-transformers,"Hugging Face Transformers: Role: Core Library (NLP/Multimodal AI). Use Cases: A massively popular open-source library providing thousands of pre-trained models (especially Transformer models like BERT, GPT, T5) and tools for Natural Language Processing (NLP) tasks like text classification, question answering, translation, and text generation. Also expanding into computer vision and audio. Simplifies fine-tuning and using state-of-the-art models.",,11,
Itertools,itertools,"Itertools Role: Standard Python Library (Utility). Use Cases: Part of Python's standard library. Provides functions creating iterators for efficient looping and combinatorial operations. Useful in data preprocessing, feature engineering, or generating combinations/permutations for experiments, often leading to more memory-efficient code than creating large lists.",,12,
Java,java,"Java Role: Less Common (Big Data/Enterprise Integration). Use Cases: Widely used in large enterprise systems and big data infrastructure (like Apache Hadoop, Spark - though PySpark is common, the core is Scala/Java). While not the primary language for model development, Java might be used for deploying ML models within existing Java applications, building robust backend systems, or interacting with big data tools. Some ML libraries exist (e.g., Weka, Deeplearning4j), but they have less adoption than Python's ecosystem.",Programming Languages,13,
JavaScript,javascript,"JavaScript Role: Supporting Tool (Web Development/Visualization). Use Cases: The primary language for front-end web development. Used extensively for creating interactive visualisations (with libraries like D3.js, Plotly.js, Chart.js), building user interfaces for web applications that interact with ML models (often alongside HTML/CSS), and potentially running lightweight models directly in the browser (using TensorFlow.js or ONNX Runtime Web).",Programming Languages,14,
Keras,keras,"Keras Role: Core Library (Deep Learning). Use Cases: A high-level API for building and training neural networks. It focuses on user-friendliness and rapid prototyping. It can run on top of backends like TensorFlow, JAX, or PyTorch (Keras Core). Excellent for standard network architectures and widely used in industry and education.",Machine Learning,15,"Keras is a high-level API that runs on top of TensorFlow (or other backends), making it easier and faster to build and train neural networks."
Kotlin,kotlin,"Kotlin Role: Rare (Android/Niche). Use Cases: Primarily used for Android app development. While technically possible to integrate ML models into Kotlin apps (e.g., using TensorFlow Lite), it's not a language typically used for core ML/AI/DS development or backend infrastructure in this field.",Programming Languages,16,
Linux,linux,"Linux Role: Dominant Operating System. Use Cases: The most common operating system for servers where ML models are trained and deployed (both on-premise and cloud). Proficiency with the Linux command line (Bash) is essential for managing environments, running jobs, and interacting with infrastructure. Many ML tools and libraries are developed and optimized primarily for Linux.",,17,
Matplotlib,matplotlib,"Matplotlib Role: Core Library (Data Visualization). Use Cases: The foundational plotting library in Python. Used for creating a wide variety of static, publication-quality plots (line, bar, scatter, histogram, etc.) during data exploration, analysis, and for communicating results. Many other plotting libraries (like Seaborn) build upon it.",Data Analysis,18,"The most established Python library for creating static, animated, and interactive visualizations. It provides a wide range of plot types (line plots, scatter plots, histograms, bar charts, etc.) and fine-grained control over plot elements."
Mlxtend,mlxtend,"Mlxtend (Machine Learning Extensions) Role: Supporting Library (ML Utilities/Enhancements). Use Cases: Provides useful tools and extensions for common data science and machine learning tasks that might not be directly in Scikit-learn. Includes functions for association rule mining (Apriori), feature selection, stacking classifiers/regressors, plotting decision boundaries, and various evaluation metrics. Useful for specific analysis patterns and convenience functions.",,19,
MongoDB,mongodb,"MongoDB Role: Supporting Tool (Database - NoSQL). Use Cases: A popular NoSQL document database. Used for storing unstructured or semi-structured data (like JSON-like documents) which can be common for certain types of ML inputs/outputs, logging, or user data. Less common than relational databases (like PostgreSQL) for storing the primary structured data used for training many traditional ML models, but useful when flexible schemas are needed.",,20,
NLTK,nltk,"NLTK (Natural Language Toolkit) Role: Core Library (NLP - Traditional). Use Cases: One of the original and comprehensive Python libraries for Natural Language Processing. Provides tools for tasks like tokenization, stemming, lemmatization, part-of-speech tagging, parsing, and access to many text corpora. While still useful for specific tasks and foundational understanding, much of its functionality for state-of-the-art NLP has been superseded by libraries like spaCy and Hugging Face Transformers.",,21,
NMap,nmap,"Nmap Role: Irrelevant (Network Security). Use Cases: A network scanning tool used for network discovery and security auditing. It has no direct application within the typical workflow of machine learning, AI, or data science development and analysis.",Cyber Security,22,
NumPy,numpy,"NumPy Role: Core Library (Numerical Computing). Use Cases: The absolute foundation for numerical work in Python. Provides efficient N-dimensional arrays, linear algebra operations, random number generation, Fourier transforms, and mathematical functions. Underpins Pandas, Scikit-learn, Matplotlib, and deep learning frameworks. Essential for any numerical data manipulation or computation.",Data Analysis,23,"The fundamental package for numerical computing in Python. It provides powerful N-dimensional array objects, linear algebra functions, Fourier transforms, random number capabilities, and more. It's the foundation for many other data science libraries."
Pandas,pandas,"Pandas Role: Core Library (Data Manipulation & Analysis). Use Cases: Provides high-performance, easy-to-use data structures (DataFrame, Series). Essential for reading/writing data (CSV, Excel, SQL, etc.), cleaning missing values, merging/joining datasets, grouping, reshaping, and performing exploratory data analysis. The primary tool for data wrangling in Python.",Data Analysis,24,"Built on top of NumPy, Pandas offers high-performance, easy-to-use data structures (like DataFrames) and data analysis tools. It's essential for data cleaning, manipulation, merging, reshaping, and analysis"
PHP,php,"PHP Role: Rare (Web Development Integration). Use Cases: A server-side scripting language primarily used for web development. While extremely popular for websites, it's rarely used for core ML/AI/DS development. You might encounter it if deploying an ML model's API that needs to be consumed by an existing PHP web application.",Programming Languages,25,
Pillow,pillow,"Pillow Role: Supporting Library (Image Processing). Use Cases: A fork of the Python Imaging Library (PIL), it's the standard library for opening, manipulating, and saving many different image file formats in Python. Used extensively in computer vision tasks for basic image loading, resizing, format conversion, and preprocessing before feeding images into ML models. Django's ImageField relies on it.",,26,
Pipenv,pipenv,"Pipenv (or Poetry, Conda, venv) Role: Crucial Supporting Tool (Environment/Package Management). Use Cases: Tools for creating isolated Python environments and managing project dependencies. Pipenv (and others like Poetry) aims to improve upon basic pip and requirements.txt by also managing dependency versions more robustly using Pipfile and Pipfile.lock. Essential for creating reproducible research and deployment environments.",,27,
Plotly,plotly,"Plotly Role: Core Library (Interactive Data Visualization). Use Cases: Creates rich, interactive graphs online and offline. Excellent for creating web-based dashboards (often via its sister library, Dash), dynamic charts (scatter plots with hover info, zoomable graphs), 3D plots, and scientific visualizations. Offers more interactivity than Matplotlib/Seaborn out-of-the-box.",,28,
PostgreSQL,postgresql,"PostgreSQL (or MySQL, SQLite) Role: Core Supporting Tool (Database - Relational). Use Cases: A powerful, open-source relational database system. Commonly used to store structured data used for training models, application data (like users, projects in your portfolio), feature stores, or model results. SQL is used to query it. Often preferred over MySQL for complex queries and data types common in data science, and preferred over SQLite for production web applications due to better concurrency handling.",,29,
Powershell,powershell,"Powershell Role: Supporting Tool (Windows Environment). Use Cases: A command-line shell and scripting language primarily for Windows. While Bash is dominant on Linux/macOS servers, Powershell is the equivalent for automating tasks, managing environments, and running scripts within the Windows ecosystem. Less common in typical cloud/Linux-based ML deployments but relevant if working heavily in a Windows environment.",,30,
PySpark,pyspark,"PySpark Role: Core Library (Big Data Processing). Use Cases: The Python API for Apache Spark. Used for distributed data processing on large datasets that don't fit into the memory of a single machine. Allows running Pandas-like operations, SQL queries, and even distributed machine learning (via Spark MLlib) across a cluster of computers. Essential for working with ""big data"".",,31,
Python,python,"Python: Role: Primary Core Language. Use Cases: The dominant programming language for data science, machine learning, and AI due to its readability, extensive libraries (NumPy, Pandas, Scikit-learn, TensorFlow, PyTorch, etc.), large community, and versatility. Used for everything from data cleaning and analysis to model building, training, evaluation, and deployment.",Programming Languages,32,A popular programming language used in data science
PyTorch,pytorch,"PyTorch Role: Core Library (Deep Learning). Use Cases: A major open-source deep learning framework developed by Meta/Facebook. Known for its flexibility (dynamic computation graphs), Pythonic feel, strong GPU acceleration, and popularity in the research community. Used for building and training all types of neural networks, especially complex or custom architectures.",Machine Learning,33,"Another major open-source deep learning framework known for its flexibility, Pythonic feel, and strong community support, especially in research."
R Language,r-language,"R Language Role: Core Language (Statistics/Data Analysis). Use Cases: A language and environment specifically designed for statistical computing and graphics. Very strong in statistical modeling, data visualization (ggplot2), and specific statistical analyses. Widely used by statisticians and data analysts, especially in academia and certain industries (e.g., bioinformatics, finance). Less common than Python for building production ML systems but excellent for analysis and visualization.",Programming Languages,34,
Requests,requests,"Requests Role: Supporting Library (HTTP Requests). Use Cases: The standard Python library for making HTTP requests (GET, POST, etc.). Used frequently in data acquisition to download files, interact with web APIs to fetch data, or send data to ML model APIs for predictions.",,35,
Ruby,ruby,"Ruby Role: Rare (Web Development Integration). Use Cases: Primarily known for the Ruby on Rails web framework. Like PHP or Java, it's not typically used for core ML/AI/DS development but might be encountered when integrating ML models into existing Rails applications.",Programming Languages,36,
Scikit-learn,scikit-learn,"Scikit-learn (sklearn) Role: Core Library (Machine Learning). Use Cases: The fundamental library for traditional (non-deep learning) machine learning algorithms in Python. Provides efficient implementations of classification, regression, clustering, dimensionality reduction (PCA, NMF), model selection (cross-validation, grid search), and preprocessing (scaling, encoding). Essential for most ML workflows.",Data Analysis,37,"The go-to library for traditional machine learning algorithms. It offers efficient tools for data preprocessing, feature extraction, classification, regression, clustering, dimensionality reduction, model selection, and evaluation."
SciPy,scipy,"SciPy Role: Core Library (Scientific Computing). Use Cases: Builds upon NumPy to provide a large collection of algorithms fundamental to scientific and technical computing. Includes modules for optimization, linear algebra (more advanced than NumPy's basic functions), integration, interpolation, signal and image processing, statistics, and more. Often used alongside NumPy and Scikit-learn.",Data Analysis,38,"Builds on NumPy and provides a large collection of algorithms and functions for scientific and technical computing, including optimization, integration, interpolation, eigenvalue problems, signal processing, and more."
Seaborn,seaborn,Seaborn Role: Core Library (Data Visualization).,Data Science,39,"Built on Matplotlib, Seaborn provides a higher-level interface for drawing attractive and informative statistical graphics. It simplifies creating complex visualizations like heatmaps, violin plots, pair plots, and integrates well with Pandas DataFrames"
Sklearn,sklearn,"Use Cases: Built on top of Matplotlib, Seaborn provides a higher-level interface for creating attractive and informative statistical graphics. It excels at visualizing distributions, relationships between variables (pair plots, heatmaps), and categorical data. Integrates seamlessly with Pandas DataFrames.",Scikit-learn:,40,
SpaCy,spacy,"SpaCy Role: Core Library (NLP - Production Focused). Use Cases: An open-source library designed for production-ready Natural Language Processing. Known for its speed, efficiency, and excellent pre-trained models for tasks like named entity recognition (NER), part-of-speech tagging, dependency parsing, text classification, and more. Often seen as a more modern alternative to NLTK for many common NLP tasks, especially when performance is key.",,41,
SQL,sql,"SQL (Structured Query Language) Role: Core Language (Database Interaction). Use Cases: The standard language for managing and querying relational databases (like PostgreSQL, MySQL, SQLite). Essential for data scientists/analysts/engineers to extract, filter, aggregate, and join data stored in databases before analysis or model training.",Web Development,42,
Statsmodels,statsmodels,"Statsmodels Role: Core Library (Statistical Modeling). Use Cases: A Python library focused on rigorous statistical modeling, estimation, and testing. Provides more extensive statistical models (e.g., GLM, ANOVA, time series models like ARIMA/SARIMA) and detailed statistical output (p-values, confidence intervals, diagnostics) than Scikit-learn. Often used for statistical inference and econometric analysis.",,43,
Tableu,tableu,"Tableau (or Power BI, Looker) Role: Supporting Tool (Business Intelligence/Visualization). Use Cases: Business Intelligence (BI) tools primarily used for creating interactive dashboards and visualizations for business users. Data scientists/analysts often use them to present findings or build self-service analytics tools, connecting to databases or prepared datasets. They offer a drag-and-drop interface, requiring less coding than Matplotlib/Plotly but potentially less customization.",,44,
TensorFlow,tensorflow,"TensorFlow Role: Core Library (Deep Learning/Numerical Computation). Use Cases: A powerful open-source library developed by Google for large-scale numerical computation and machine learning, especially deep learning. Provides infrastructure for building, training, and deploying complex models (often via the Keras API). Offers strong support for distributed training and deployment across various platforms (servers, mobile, web via TensorFlow.js).",Machine Learning,45,"TensorFlow is a powerful open-source library developed by Google for numerical computation and large-scale machine learning, particularly deep learning."
Transformers,transformers,"Transformers (Architecture) Role: Core Concept/Architecture (AI/Deep Learning). Use Cases: A type of neural network architecture, introduced in the paper ""Attention Is All You Need,"" that relies heavily on self-attention mechanisms. It has revolutionized NLP (forming the basis for models like BERT, GPT, T5) and is increasingly applied successfully to computer vision, audio, and other domains. Understanding the Transformer architecture is key to working with state-of-the-art models. (See also: Hugging Face Transformers library).",,46,
Wireshark,wireshark,"Wireshark Role: Irrelevant (Network Analysis). Use Cases: A network protocol analyzer used for network troubleshooting, analysis, software and communications protocol development. It has no direct application in the typical ML/AI/DS workflow.",Cyber Security,47,
